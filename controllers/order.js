const { Order, CartItem } = require("../models/order");
const { errorHandler } = require("../controllers/dbErrorHandler");
require("dotenv").config();
var nodemailer = require("nodemailer");

//mail function for sending mail
var transport = nodemailer.createTransport({
  host: "smtpout.secureserver.net",
  port: 465,
  auth: {
    user: "info@opeboindustries.com", //example of generated by Mailtrap
    pass: "OpeBo1234@", //example of generated by Mailtrap
  },
});
exports.orderById = (req, res, next, id) => {
  Order.findById(id)
    .populate("orders.subService", "name price count status")
    .exec((err, order) => {
      if (err || !order) {
        return res.status(400).json({
          error: errorHandler(err),
        });
      }
      req.order = order;
      next();
    });
};

exports.listOrders = (req, res) => {
  Order.find()
    .populate("user", "_id name address")
    .sort("-created")
    .exec((err, orders) => {
      if (err) {
        return res.status(400).json({
          error: errorHandler(error),
        });
      }
      res.json(orders);
    });
};
exports.singleOrder = async (req, res) => {
  Order.findById(req.params.orderId)
    .populate("orders.subService")
    .exec((err, order) => {
      if (err) {
        return res.status(400).json({
          error: errorHandler(err),
        });
      }
      res.json(order);
    });
};

exports.getStatusValues = (req, res) => {
  res.json(Order.schema.path("status").enumValues);
};

exports.updateOrderStatus = (req, res) => {
  Order.update(
    { _id: req.body.orderId },
    { $set: { status: req.body.status } },
    (err, order) => {
      if (err) {
        return res.status(400).json({
          error: errorHandler(err),
        });
      }
      res.json(order);
    }
  );
};

// creating order with email capabilities
exports.create = (req, res, next) => {
  req.body.order.user = req.profile;
  const order = new Order(req.body.order);
  order.save((error, data) => {
    if (error) {
      return res.status(400).json({
        error: errorHandler(error),
      });
    }
    //console.log(data._id);
    //console.log(data.transaction_id);
    console.log(data.amount);
    //console.log(data.user.name);
    data.orders.map((abcd) => {
      console.log(abcd);
      console.log(abcd.status);
    });

    var UserEmail = {
      from: "info@opeboindustries.com",
      to: order.user.email,
      subject: `Your Order from OpeBo`,
      html: `
            <h2>Hey ${
              data.user.name
            }, Thank you for choosing Opebo Service.</h2>
            <h3> Order Details : <h3/>
            <h4>Order ID:${data._id} <h4/>
            <h4>Transaction ID: ${data.transaction_id}</h4>
            <h4>Amount Paid: ${data.amount}</h4>

            <h2>Order status: ${order.status}</h2>
            <h2>Services details:</h2>
            <hr />
            ${data.orders
              .map((p) => {
                return `<div>
                        <h4>Service Name: ${p.name}</h4>
                        <h4>Service Category: ${p.service}</h4>
                        <h4>Service Price: ${p.price}</h4>
                        <h4>Order Date: ${p.createdAt}</h4>
                </div>`;
              })
              .join("--------------------")}
           <hr />
            <p>Stay connected with us.</p>
            <p> Opebo for everyone. </>
        `,
    };
    transport.sendMail(UserEmail, (error, info) => {
      if (error) {
        return console.log(error);
      }
    });
    return data;
  });
  req.orderId = order._id;
  next();
};

// exports.create = (req, res, next) => {
//   // console.log("CREATE ORDER: ", req.body);
//   req.body.order.user = req.profile;
//   const order = new Order(req.body.order);
//   order.save((error, data) => {
//     if (error) {
//       return res.status(400).json({
//         error: errorHandler(error),
//       });
//     }
//     return data;
//   });
//   req.orderId = order._id;
//   next();
// };
